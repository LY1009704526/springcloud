server:
  port: 9001  #微服务的集群环境中，通常会为每一个微服务叠加

spring:
  application:
    name: service-product
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/springcloud?useUnicode=true&characterEncoding=utf8&serverTimezone=UTC
    username: root
    password: sunshine

eureka:
  client: #Eureka server本身也是eureka的一个客户端，因为在集群下需要与其他eureka server进行数据的同步
    service-url:  # 定义eureka server url
      defaultZone: http://CloudEurekaServerA:9200/eureka,http://CloudEurekaServerB:9201/eureka
    register-with-eureka: true  #表示是否向Eureka中心注册自己的信息，默认为true
    fetch-registry: true #是否拉取Eureka server服务注册列表，默认为true
    registry-fetch-interval-seconds: 30 #从Eureka server服务注册列表的时间
  instance:
    #    hostname: localhost #当前eureka实例的主机名
    #使用ip注册，否则会使用主机名注册了（此处考虑到对老版本的兼容，新版本经过实验都是ip）
    prefer-ip-address: true
    #自定义实例显示格式，加上版本号，便于多版本管理，注意是ip-address，早期版本是ipAddress
    instance-id: ${spring.cloud.client.ip-address}:${spring.application.name}:${server.port}:1.0-SNAPSHOT
    #自定义元数据，会和标准元数据一起注册到服务注册中心，可以被注册中心所有的client获取
    metadata-map:
      name: LiuYu
      age: 24
      password: sunshine
    lease-renewal-interval-in-seconds: 30 #续约间隔时间
    lease-expiration-duration-in-seconds: 90  #剔除时间

